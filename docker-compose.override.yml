version: "3"
services:
    nginx:
        container_name: streamr-dev-nginx
        image: nginx:1.14-alpine
        restart: on-failure
        ports:
          - "80:80"
        volumes:
          - ./custom-nginx-reverse-proxy.conf:/etc/nginx/nginx.conf:ro
        healthcheck:
            test: ["CMD", "nc", "-z", "localhost", "80"]
            interval: 10s
            timeout: 10s
            retries: 60
    tracker:
        container_name: streamr-dev-tracker
        image: streamr/broker-node:dev
        restart: on-failure
        ports:
            - "30300:30300"
            - "11111:11111"
        command: node tracker.js --endpointServerPort=11111
        healthcheck:
            test: ["CMD", "curl", "-sS", "http://localhost:11111/topology/"]
            interval: 30s
            timeout: 10s
            retries: 20
    broker-node-storage-1:
        container_name: streamr-dev-broker-node-storage-1
        image: streamr/broker-node:dev
        restart: on-failure
        ports:
            - "8890:8890"
            - "8891:8891"
            - "9000:9000"
            - "30315:30315"
        depends_on:
            - init-keyspace
            - cassandra
            - tracker
        environment:
            STREAMR_URL: http://10.200.10.1:8081/streamr-core
            CASSANDRA_HOST: 10.200.10.1:9042
            CONFIG_FILE: configs/docker-1.env.json
        healthcheck:
            test: ["CMD", "curl", "-sS", "http://localhost:8891/api/v1/volume"]
            interval: 30s
            timeout: 10s
            retries: 20
    broker-node-no-storage-1:
        container_name: streamr-dev-broker-node-no-storage-1
        image: streamr/broker-node:dev
        restart: on-failure
        ports:
            - "8790:8790"
            - "8791:8791"
            - "9100:9100"
            - "30316:30316"
        depends_on:
            - tracker
        environment:
            STREAMR_URL: http://10.200.10.1:8081/streamr-core
            CONFIG_FILE: configs/docker-2.env.json
        healthcheck:
            test: ["CMD", "curl", "-sS", "http://localhost:8791/api/v1/volume"]
            interval: 30s
            timeout: 10s
            retries: 20
    broker-node-no-storage-2:
        container_name: streamr-dev-broker-node-no-storage-2
        image: streamr/broker-node:dev
        restart: on-failure
        ports:
            - "8690:8690"
            - "8691:8691"
            - "9200:9200"
            - "30317:30317"
        depends_on:
            - tracker
        environment:
            STREAMR_URL: http://10.200.10.1:8081/streamr-core
            CONFIG_FILE: configs/docker-3.env.json
        healthcheck:
            test: ["CMD", "curl", "-sS", "http://localhost:8691/api/v1/volume"]
            interval: 30s
            timeout: 10s
            retries: 20
    engine-and-editor:
        container_name: streamr-dev-engine-and-editor
        image: streamr/engine-and-editor:dev
        ports:
            - "8081:8081"
        depends_on:
            - init-keyspace
            - smtp
            - mysql
            - cassandra
            - redis
            - broker-node-storage-1
            - broker-node-no-storage-1
            - broker-node-no-storage-2
            - parity-node0
        healthcheck:
            test: ["CMD", "curl", "-sS", "http://localhost:8081/streamr-core/api/v1/products"]
            interval: 30s
            timeout: 10s
            retries: 20
        environment:
            AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
            AWS_SECRET_KEY: "${AWS_SECRET_ACCESS_KEY}"
            FILEUPLOAD_S3_BUCKET: "${FILEUPLOAD_S3_BUCKET}"
            STREAMR_URL: "http://10.200.10.1"
            CPS_URL: "http://10.200.10.1:8085/communities/"
    parity-node0:
        container_name: streamr-dev-parity-node0
        image: streamr/streamr-parity-node0:dev
        ports:
          - "8545:8545"
        restart: on-failure
        environment:
            EE_URL: http://engine-and-editor:8081/streamr-core
            NETWORK_ID: 1111
        healthcheck:
            test: ["CMD", "curl", "-sS", "http://localhost:8545"]
            interval: 10s
            timeout: 10s
            retries: 60
    ethereum-watcher:
        container_name: streamr-dev-ethereum-watcher
        image: streamr/ethereum-watcher:dev
        restart: on-failure
        depends_on:
            - parity-node0
            - engine-and-editor
        environment:
            STREAMR_API_URL: http://engine-and-editor:8081/streamr-core/api/v1
            METRICS: null
            ETHEREUM_SERVER_URL: "http://parity-node0:8545"
            MARKETPLACE_ADDRESS: "0xEa4C690E7560070071643960f20bA984c8A922cd"
            DEVOPS_KEY: "devops-user-key"
        volumes:
            - ./data/ethereum-watcher/:/app/logs
    data-union-server:
        container_name: streamr-dev-data-union-server
        image: streamr/streamr-community-products:dev
        ports:
          - "8085:8085"
        restart: on-failure
        depends_on:
            - parity-node0
            - engine-and-editor
        environment:
            ETHEREUM_SERVER: http://10.200.10.1:8545
            ETHEREUM_PRIVATE_KEY: 3DF8095DFBAE93D8C7F1143B217A483D57A7F745E2542425DFE2FA25264CB2E8
            STREAMR_WS_URL: ws://10.200.10.1:8890/api/v1/ws
            STREAMR_HTTP_URL: http://10.200.10.1:8081/streamr-core/api/v1
            TOKEN_ADDRESS: "0xeDFC9c2F4Cfa7495c1A95CfE1cB856F5980D5e18"
            REMOTE_SECRETS: "false"
        healthcheck:
            test: ["CMD", "curl", "-sS", "http://localhost:8085/dataunions"]
            interval: 10s
            timeout: 10s
            retries: 60
    platform:
        container_name: streamr-dev-platform
        image: streamr/platform:dev
        healthcheck:
            test: ["CMD", "curl", "-sS", "http://localhost"]
            interval: 10s
            timeout: 10s
            retries: 60
        ports:
            - "3333:80"
        depends_on:
            - engine-and-editor
            - parity-node0
    parity-node0:
         container_name: streamr-dev-parity-node0
         image: streamr/open-ethereum-poa:dev
         depends_on:
           - parity-node1
           - parity-node2
           - smart-contracts-init
         ports:
           - "8545:8540"
           - "8450:8450"
           - "30309:30309"
         restart: on-failure
         healthcheck:
            test: ["CMD", "curl", "-sS", "http://localhost:8540"]
            interval: 1m30s
            timeout: 10s
            retries: 3
         command: --chain ./streamr-spec.json --config ./node0.toml
    parity-node1:
         container_name: streamr-dev-parity-node1
         image: streamr/open-ethereum-poa:dev
         ports:
           - "8541:8541"
           - "8451:8451"
           - "30301:30301"
         restart: on-failure
         healthcheck:
            test: ["CMD", "curl", "-sS", "http://localhost:8541"]
            interval: 1m30s
            timeout: 10s
            retries: 3
         command: --chain ./streamr-spec.json --config ./node1.toml --bootnodes enode://b5500b451712edbff1fc09658d9730a2b41d05f1bbd7588aca7f98799e053d5e126e86200654e0a695ff4e9bb14be9e6cea0cfc81c3a051419a0a30a6a2ad8a5@parity-node0:30309
    parity-node2:
         container_name: streamr-dev-parity-node2
         image: streamr/open-ethereum-poa:dev
         ports:
           - "8542:8542"
           - "8452:8452"
           - "30302:30302"
         restart: on-failure
         healthcheck:
            test: ["CMD", "curl", "-sS", "http://localhost:8542"]
            interval: 1m30s
            timeout: 10s
            retries: 3
         command: --chain ./streamr-spec.json --config ./node2.toml --bootnodes enode://b5500b451712edbff1fc09658d9730a2b41d05f1bbd7588aca7f98799e053d5e126e86200654e0a695ff4e9bb14be9e6cea0cfc81c3a051419a0a30a6a2ad8a5@parity-node0:30309
    smart-contracts-init:
        container_name: smart-contracts-init
        image: streamr/smart-contracts-init:dev
        restart: on-failure
        environment:
            EE_URL: http://engine-and-editor:8081/streamr-core
            CHAIN_URL: http://10.200.10.1:8545